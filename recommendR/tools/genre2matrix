#!/usr/bin/env perl

use v5.8;

use strict;
use warnings;

use Getopt::Long;
use Scalar::Util qw/ looks_like_number /;

my $users  = "data/User_attributes.csv";
my $table  = "out/hiScoreHiFreq_genreInfo.txt";
my $threshold = 50;
my %userString;
my %userViews;

GetOptions(
    "users=s"     => \$users,
    "table=s"     => \$table,
    "threshold=i" => \$threshold
) or die("Error in command line arguments\n");

my $genre       = readGenre($genres);
my $userDetails = usrDetails($users);

#Parse genres
open my $matrixFile, "<", $table or die "cannot open $table $!\n";
while(<$matrixFile>)
{
   chomp;
   my ($user, $genreString, $mv) = (split /\t/);
   next unless looks_like_number($user); #to skip header if it exists
   my $inner                     = loopGenre($genreString, $genre, $mv, $user);
   if(exists $userString{$user}){
       $userString{$user}->[$_] += $inner->[$_] for 0..$#{$inner}
   }else{
       $userString{$user} = $inner
   }
}

#Print Matrix
my @genreColName = map {s/\s\(\S+\*?\)$//; s/^[[:ascii:]]//g; s/\s/_/g; $_ } @{$genre};
print join("\t", "user", "country", "gender", @genreColName),"\n"; #HEADER
print join("\t", $_, $userDetails->{$_}->{country}, $userDetails->{$_}->{gender}, @{ $userString{$_} }), "\n" for keys %userString;

sub readGenre
{
    my @genre = <DATA>;
    chomp @genre;
    close $input;
    return \@genre
}

=pod
 readGenre reads in the genrelist,
 stores and returns genres as an array
=cut

sub loopGenre {
    my ($genreString, $genre, $mv, $user) = @_;
    my @watchedGenres                     = split ", ", $genreString;
    my @inner                             = (0) x scalar @{$genre};
    for my $viewedGenre (@watchedGenres){
        my $i = 0;
        for my $atomGenre (@{ $genre }){
            $userViews{$user}->{$atomGenre}++ if $mv >= $threshold;
            $inner[$i] = $mv if $atomGenre eq $viewedGenre;
            $i++;
        }
    }
    return \@inner
}

=pod
  \code{loopGenre} takes the genre string and calculate
=cut

sub usrDetails{
    my ($filePath) = @_;
    my %UD;
    open my $userDetails, "<", $filePath or die "cannot open $filePath$!\n";
    while(<$userDetails>){
        unless ($. == 1){
            chomp;
            my ($userID, $country, $gender) =  m/(\S+),(\S+),(\S+)/;
            $UD{$userID} =
            {
                country => $country,
                gender  => $gender
            }
        }
    }
    return \%UD;
}

=pod
 =head options
 --table: usr genre string mv_ratio
 =head output
 the out gives the username
=cut

__DATA__
None
Action & Adventure (1g)
Comedy (6g)
Drama (9g)
Idol Drama (1038g)
Romance (18g)
Taiwanese Drama (1043g)
SciFi & Fantasy (19g)
Family & Kids (24g)
Korean Drama (23g)
Classics (5g)
Costume & Period (25g)
Entertainment (10g)
Lifestyle & Variety (14g)
Crime & Mystery (7g)
Biography (3g)
Variety Show (1044g)
Telenovelas (27g)
Women (1046g)
Music (17g)
Horror & Supernatural (12g)
Medical Drama (1040g)
Cartoons (4g)
Reality (1042g)
Sports (20g)
Food & Cooking (1053g)
Melodrama (1041g)
Thriller & Suspense (26g)
Anime (2g)
Historical (1037g)
Documentary (8g)
Bollywood (1054g)
Independent (13g)
